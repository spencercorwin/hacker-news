{"version":3,"sources":["serviceWorker.ts","config/store.ts","rootReducer.ts","modules/HomePage/reducer.ts","modules/Discuss/reducer.ts","components/Header.tsx","components/ArticleItem.tsx","modules/HomePage/components/ListItem.tsx","modules/HomePage/modules/Content.tsx","components/IsLoading.tsx","modules/HomePage/DisplayContainer.tsx","modules/HomePage/LogicContainer.tsx","modules/HomePage/actions.ts","modules/HomePage/DataContainer.tsx","modules/Discuss/components/Topic.tsx","modules/Discuss/components/Space.tsx","modules/Discuss/components/Comment.tsx","modules/Discuss/components/CommentHeader.tsx","modules/Discuss/components/CommentContainer.tsx","modules/Discuss/modules/Discussion.tsx","modules/Discuss/DisplayContainer.tsx","modules/Discuss/LogicContainer.tsx","modules/Discuss/DataContainer.tsx","modules/Discuss/actions.ts","RouteContainer.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","initialState","homePage","list","articles","counter","currentIndex","isLoading","discuss","comments","article","rootReducer","combineReducers","state","arguments","length","undefined","action","type","Object","objectSpread","json","homePageReducer","discussReducer","Header","changeSort","stories","_this$props","_this","props","resetIndex","push","history","concat","addClassIfActive","path","pathname","includes","_this2","this","react_default","a","createElement","className","onClick","React","PureComponent","HeaderWrapped","withRouter","ArticleItem","getUrl","url","replace","toDiscussPage","id","keyDownToDiscussPage","event","key","console","log","Fragment","href","title","score","by","tabIndex","onKeyDown","descendants","Component","ArticleItemWrapped","ListItem","index","ListItemWrapped","Content","_React$PureComponent","_getPrototypeOf2","classCallCheck","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","switchPage","_ref","direction","sortBy","onKeyDownSwitchPage","_ref2","toggleArticlesCount","onKeyDownToggleArticlesCount","inherits","createClass","value","map","IsLoading","alt","src","HomePageDisplayContainer","_React$Component","content","fetchArticles","IsLoading_IsLoading","Content_Content","react_router","exact","component","HomePageLogicContainer","DisplayContainer_HomePageDisplayContainer","dispatch","fetch","then","res","result","getState","_getState$homePage","slice","number","HomePageDataContainer","componentDidMount","prevProps","_this$props2","_this$props3","LogicContainer_HomePageLogicContainer","HomePageDataContainerWrapped","connect","Topic","dangerouslySetInnerHTML","__html","text","Space","toggleView","Comment","comment","childrenCommentsArray","_this$props$isFirstRe","isFirstRender","kids","CommentContainer_CommentContainer","CommentHeader","_this$props$comment","parent","isOpen","CommentContainer","setState","Space_Space","CommentHeader_CommentHeader","Comment_Comment","Discussion","Topic_Topic","DiscussDisplayContainer","Discussion_Discussion","DiscussLogicContainer","values","filter","fetchArticleForDiscussPage","DisplayContainer_DiscussDisplayContainer","DiscussDataContainer","split","LogicContainer_DiscussLogicContainer","DiscussDataContainerWrapped","getComments","commentsObject","forEach","keys","RouteContainer","to","RouteContainerWrapped","loggerMiddleware","createLogger","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","ReactDOM","render","react_redux_es","react_router_dom","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"sOAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,4EChBOC,EAA0B,CACrCC,SAAU,CACRC,KAAM,GACNC,SAAU,GACVC,QAAS,GACTC,aAAc,EACdC,WAAW,GAEbC,QAAS,CACPC,SAAU,GACVC,QAAS,GACTH,WAAW,ICCFI,EAAcC,0BAAgB,CACzCV,SATsB,WACtB,OCJ6B,WAG1B,IAFHW,EAEGC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAFUb,EAAaC,SAC1Be,EACGH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACH,OAAQC,EAAOC,MACb,IAAK,qBACH,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GAAKN,EAAZ,CAAmBN,WAAW,IAChC,IAAK,yBACH,OAAOY,OAAAC,EAAA,EAAAD,CAAA,GAAKN,EAAZ,CAAmBV,KAAMc,EAAOI,KAAMd,WAAW,IACnD,IAAK,yBACH,OAAOY,OAAAC,EAAA,EAAAD,CAAA,GAAKN,EAAZ,CAAmBN,WAAW,IAChC,IAAK,6BACH,OAAOY,OAAAC,EAAA,EAAAD,CAAA,GAAKN,EAAZ,CAAmBT,SAAUa,EAAOI,KAAMd,WAAW,IACvD,IAAK,0BACH,OAAOY,OAAAC,EAAA,EAAAD,CAAA,GAAKN,EAAZ,CAAmBP,aAAcO,EAAMP,aAAeO,EAAMR,UAC9D,IAAK,sBACH,OAAOc,OAAAC,EAAA,EAAAD,CAAA,GAAKN,EAAZ,CAAmBP,aAAcO,EAAMP,aAAeO,EAAMR,UAC9D,IAAK,2BACH,OAAOc,OAAAC,EAAA,EAAAD,CAAA,GAAKN,EAAZ,CAAmBR,QAA2B,KAAlBQ,EAAMR,QAAiB,GAAK,KAC1D,IAAK,wBACH,OAAOc,OAAAC,EAAA,EAAAD,CAAA,GAAKN,EAAZ,CAAmBP,aAAc,IACnC,QACE,OAAOO,GDlBJS,CADoER,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAvCb,EAAaC,SAA0BY,UAAAC,OAAA,EAAAD,UAAA,QAAAE,IAU3ER,QANqB,WACrB,OER4B,WAGzB,IAFHK,EAEGC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAFUb,EAAaO,QAC1BS,EACGH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACH,OAAQC,EAAOC,MACb,IAAK,+BACH,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GAAKN,EAAZ,CAAmBN,WAAW,IAChC,IAAK,2BACH,OAAOY,OAAAC,EAAA,EAAAD,CAAA,GAAKN,EAAZ,CAAmBH,QAAQS,OAAAC,EAAA,EAAAD,CAAA,GAAMF,EAAOI,QAC1C,IAAK,4BACH,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GAAKN,EAAZ,CAAmBN,WAAW,IAChC,IAAK,4BACH,OAAOY,OAAAC,EAAA,EAAAD,CAAA,GAAKN,EAAZ,CAAmBN,WAAW,EAAOE,SAASU,OAAAC,EAAA,EAAAD,CAAA,GAAMF,EAAOI,QAC7D,QACE,OAAOR,GFNJU,CADkET,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtCb,EAAaO,QAAyBM,UAAAC,OAAA,EAAAD,UAAA,QAAAE,wDGNrEQ,6MACJC,WAAa,SAACC,GAAoB,IAAAC,EAI5BC,EAAKC,MAFPC,EAF8BH,EAE9BG,WACWC,EAHmBJ,EAG9BK,QAAWD,KAEbD,GAAcA,IACdC,EAAI,IAAAE,OAAKP,OAGXQ,iBAAmB,SAAAC,GAAI,OACrBP,EAAKC,MAAM/B,SAASsC,SAASC,SAASF,GAAQ,UAAY,4EAEnD,IAAAG,EAAAC,KACP,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAhB,sBACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAhB,KACAH,EAAAC,EAAAC,cAAA,QACEC,UAAS,OAAAV,OAASM,KAAKL,iBAAiB,eACxCU,QAAS,kBAAMN,EAAKb,WAAW,gBAFjC,eAMAe,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAhB,KACAH,EAAAC,EAAAC,cAAA,QACEC,UAAS,OAAAV,OAASM,KAAKL,iBAAiB,eACxCU,QAAS,kBAAMN,EAAKb,WAAW,gBAFjC,eAMAe,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAhB,KACAH,EAAAC,EAAAC,cAAA,QACEC,UAAS,OAAAV,OAASM,KAAKL,iBAAiB,gBACxCU,QAAS,kBAAMN,EAAKb,WAAW,iBAFjC,wBAhCaoB,IAAMC,eA2CdC,EAAgBC,YAAWxB,GC3ClCyB,6MACJC,OAAS,SAACC,GAER,OAAOA,EAAIC,QADG,6BACY,OAG5BC,cAAgB,SAAAC,GAAM,IAAA3B,EAIhBC,EAAKC,MAFPG,EAFkBL,EAElBK,QACYI,EAHMT,EAGlB7B,SAAYsC,SAGdJ,EAAQD,KAAR,GAAAE,OAAgBG,EAAhB,KAAAH,OAA4BqB,OAG9BC,qBAAuB,SAACC,EAA4BF,GAChC,UAAdE,EAAMC,KAGV7B,EAAKyB,cAAcC,4EAGZ,IAAAhB,EAAAC,KACC7B,EAAY6B,KAAKV,MAAjBnB,QAMR,OAJKA,GACHgD,QAAQC,IAAI,CAAEjD,YAId8B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmB,SAAA,KACEpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SACbjC,GAAWA,EAAQyC,IAClBX,EAAAC,EAAAC,cAAA,KAAGmB,KAAMnD,EAAQyC,KAAMzC,EAAQoD,OAE/BtB,EAAAC,EAAAC,cAAA,QAAME,QAAS,kBAAMN,EAAKe,cAAc3C,EAAQ4C,MAC7C5C,EAAQoD,QAIftB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,OACbjC,GAAWA,EAAQyC,KAAOZ,KAAKW,OAAOxC,EAAQyC,OAGnDX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,YAAOhC,EAAQqD,MAAf,WACAvB,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,YAAOhC,EAAQsD,IACfxB,EAAAC,EAAAC,cAAA,QACEC,UAAU,SACVsB,SAAU,EACVrB,QAAS,kBAAMN,EAAKe,cAAc3C,EAAQ4C,KAC1CY,UAAW,SAAAV,GAAK,OAAIlB,EAAKiB,qBAAqBC,EAAO9C,EAAQ4C,MAE5D5C,EAAQyD,YANX,sBAjDgBtB,IAAMuB,WA+DnBC,EAAqBrB,YAAWC,GC9DvCqB,mLACK,IAAA3C,EACoBY,KAAKV,MAAxBnB,EADDiB,EACCjB,QAAS6D,EADV5C,EACU4C,MAEjB,OACE/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQ4B,EAAQ,GAC/B/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAC2B,EAAD,CAAa3D,QAASA,aARTmC,IAAMuB,WAehBI,EAAkBxB,YAAWsB,GChB7BG,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAA/C,EAAAT,OAAAyD,EAAA,EAAAzD,CAAAoB,KAAAkC,GAAA,QAAAI,EAAA/D,UAAAC,OAAA+D,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAAlE,UAAAkE,GAAA,OAAApD,EAAAT,OAAA8D,EAAA,EAAA9D,CAAAoB,MAAAoC,EAAAxD,OAAA+D,EAAA,EAAA/D,CAAAsD,IAAAU,KAAAC,MAAAT,EAAA,CAAApC,MAAAN,OAAA6C,MACEO,WAAa,SAAAC,GAA2B,IAAxBC,EAAwBD,EAAxBC,UAAWC,EAAaF,EAAbE,OACzB5D,EAAKC,MAAMwD,WAAW,CAAEE,YAAWC,YAFvC5D,EAKE6D,oBAAsB,SAACjC,EAADkC,GAAuD,IAAxBH,EAAwBG,EAAxBH,UAAWC,EAAaE,EAAbF,OAC5C,UAAdhC,EAAMC,KAGV7B,EAAKyD,WAAW,CAAEE,YAAWC,YATjC5D,EAYE+D,oBAAsB,SAAAvD,GACpBR,EAAKC,MAAM8D,oBAAoBvD,IAbnCR,EAgBEgE,6BAA+B,SAACpC,EAA4BpB,GACxC,UAAdoB,EAAMC,KAGV7B,EAAK+D,oBAAoBvD,IApB7BR,EAAA,OAAAT,OAAA0E,EAAA,EAAA1E,CAAAsD,EAAAC,GAAAvD,OAAA2E,EAAA,EAAA3E,CAAAsD,EAAA,EAAAhB,IAAA,SAAAsC,MAAA,WAuBW,IAAAzD,EAAAC,KAAAZ,EAMHY,KAAKV,MAJPzB,EAFKuB,EAELvB,SACAE,EAHKqB,EAGLrB,aACAD,EAJKsB,EAILtB,QACY+B,EALPT,EAKL7B,SAAYsC,SAGd,OACEI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACZvC,EAAS4F,IAAI,SAACtF,EAAsB6D,GAAvB,OACZ/B,EAAAC,EAAAC,cAAC8B,EAAD,CACEf,IAAKc,EAAQjE,EACbI,QAASA,EACT6D,MAAOA,EAAQjE,MAGnBkC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACK,IAAjBrC,GACCkC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmB,SAAA,KACEpB,EAAAC,EAAAC,cAAA,QACEE,QAAS,kBACPN,EAAK+C,WAAW,CACdE,UAAW,WACXC,OAAQpD,KAGZ8B,UAAW,SAAAV,GAAK,OACdlB,EAAKmD,oBAAoBjC,EAAO,CAC9B+B,UAAW,OACXC,OAAQpD,MAIX9B,EAAe,EAAI,SAAW,IAEjCkC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAhB,MAGJH,EAAAC,EAAAC,cAAA,QACEE,QAAS,kBACPN,EAAK+C,WAAW,CAAEE,UAAW,OAAQC,OAAQpD,KAE/C8B,UAAW,SAAAV,GAAK,OACdlB,EAAKmD,oBAAoBjC,EAAO,CAC9B+B,UAAW,OACXC,OAAQpD,KAGZ6B,SAAU,GAVZ,QAcAzB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAhB,KACa,KAAZtC,EACCmC,EAAAC,EAAAC,cAAA,QACEE,QAAS,kBAAMN,EAAKqD,oBAAoBvD,IACxC6B,SAAU,EACVC,UAAW,SAAAV,GAAK,OACdlB,EAAKsD,6BAA6BpC,EAAOpB,KAJ7C,oBAUAI,EAAAC,EAAAC,cAAA,QACEE,QAAS,kBAAMN,EAAKqD,oBAAoBvD,IACxC6B,SAAU,EACVC,UAAW,SAAAV,GAAK,OACdlB,EAAKsD,6BAA6BpC,EAAOpB,KAJ7C,0BAxFZqC,EAAA,CAA6B5B,IAAMC,eCFtBmD,EAAb,SAAAvB,GAAA,SAAAuB,IAAA,OAAA9E,OAAAyD,EAAA,EAAAzD,CAAAoB,KAAA0D,GAAA9E,OAAA8D,EAAA,EAAA9D,CAAAoB,KAAApB,OAAA+D,EAAA,EAAA/D,CAAA8E,GAAAb,MAAA7C,KAAAzB,YAAA,OAAAK,OAAA0E,EAAA,EAAA1E,CAAA8E,EAAAvB,GAAAvD,OAAA2E,EAAA,EAAA3E,CAAA8E,EAAA,EAAAxC,IAAA,SAAAsC,MAAA,WAEI,OACEvD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OACEwD,IAAI,GACJC,IAAI,oEANdF,EAAA,CAA+BpD,IAAMC,eCKxBsD,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAzB,EAAA/C,EAAAT,OAAAyD,EAAA,EAAAzD,CAAAoB,KAAA6D,GAAA,QAAAvB,EAAA/D,UAAAC,OAAA+D,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAAlE,UAAAkE,GAAA,OAAApD,EAAAT,OAAA8D,EAAA,EAAA9D,CAAAoB,MAAAoC,EAAAxD,OAAA+D,EAAA,EAAA/D,CAAAiF,IAAAjB,KAAAC,MAAAT,EAAA,CAAApC,MAAAN,OAAA6C,MACEwB,QAAU,WAAM,IAAA3E,EAUVC,EAAKC,MARPzB,EAFYuB,EAEZvB,SACAG,EAHYoB,EAGZpB,UACAD,EAJYqB,EAIZrB,aACAiG,EALY5E,EAKZ4E,cACAzG,EANY6B,EAMZ7B,SACAuF,EAPY1D,EAOZ0D,WACAM,EARYhE,EAQZgE,oBACAtF,EATYsB,EASZtB,QAGF,OAAIE,EACKiC,EAAAC,EAAAC,cAAC8D,EAAD,MAIPhE,EAAAC,EAAAC,cAAC+D,EAAD,CACErG,SAAUA,EACVG,UAAWA,EACXD,aAAcA,EACd+E,WAAYA,EACZkB,cAAeA,EACfzG,SAAUA,EACV6F,oBAAqBA,EACrBtF,QAASA,KA1BjBuB,EAAA,OAAAT,OAAA0E,EAAA,EAAA1E,CAAAiF,EAAAC,GAAAlF,OAAA2E,EAAA,EAAA3E,CAAAiF,EAAA,EAAA3C,IAAA,SAAAsC,MAAA,WAgCI,OACEvD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACK,EAAD,CAAQjB,WAAYS,KAAKV,MAAMC,aAC/BU,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAOC,OAAK,EAACxE,KAAK,OAAOyE,UAAWrE,KAAK+D,eAnCjDF,EAAA,CAA8CvD,IAAMuB,WCHvCyC,EAAb,SAAAR,GAAA,SAAAQ,IAAA,OAAA1F,OAAAyD,EAAA,EAAAzD,CAAAoB,KAAAsE,GAAA1F,OAAA8D,EAAA,EAAA9D,CAAAoB,KAAApB,OAAA+D,EAAA,EAAA/D,CAAA0F,GAAAzB,MAAA7C,KAAAzB,YAAA,OAAAK,OAAA0E,EAAA,EAAA1E,CAAA0F,EAAAR,GAAAlF,OAAA2E,EAAA,EAAA3E,CAAA0F,EAAA,EAAApD,IAAA,SAAAsC,MAAA,WACW,IAAApE,EAYHY,KAAKV,MAVPzB,EAFKuB,EAELvB,SACAE,EAHKqB,EAGLrB,aACAiG,EAJK5E,EAIL4E,cACAhG,EALKoB,EAKLpB,UACAT,EANK6B,EAML7B,SACAuF,EAPK1D,EAOL0D,WACArD,EARKL,EAQLK,QACA2D,EATKhE,EASLgE,oBACAtF,EAVKsB,EAULtB,QACAyB,EAXKH,EAWLG,WAGF,OACEU,EAAAC,EAAAC,cAACoE,EAAD,CACEP,cAAeA,EACfzG,SAAUA,EACVM,SAAUA,EACVE,aAAcA,EACdC,UAAWA,EACXyB,QAASA,EACTqD,WAAYA,EACZM,oBAAqBA,EACrBtF,QAASA,EACTyB,WAAYA,QA1BpB+E,EAAA,CAA4ChE,IAAMuB,WC4DrCmC,EAAgB,SAACf,GAAD,OAAoB,SAAAuB,GAE/C,OADAA,EAxC+C,CAC/C7F,KAxBqB,uBAgEd8F,MAAK,yCAAA/E,OAA0CuD,EAA1C,UACTyB,KAAK,SAAAC,GAAG,OAAIA,EAAI7F,SAChB4F,KAAK,SAAAE,GACJJ,EAxCmD,CACvD7F,KA3ByB,yBA4BzBG,KAsCyB,CAAEA,KAAM8F,GAxCL9F,OAyCxB0F,EAvBiC,SAACA,EAAUK,GAAa,IAAAC,EACrBD,IAAWlH,SAA3CC,EADqDkH,EACrDlH,KAAMG,EAD+C+G,EAC/C/G,aAAcD,EADiCgH,EACjChH,QAEtBD,EAA0B,GAChC2G,EAbmD,CACnD7F,KAnCyB,2BAgDzBf,EAAKmH,MAAMhH,EAAcA,EAAeD,GAAS2F,IAAI,SAAAuB,GAAM,OACzDP,MAAK,8CAAA/E,OAA+CsF,EAA/C,UACFN,KAAK,SAAAC,GAAG,OAAIA,EAAI7F,SAChB4F,KAAK,SAAAE,GACJ/G,EAAS2B,KAAKoF,GACV/G,EAASW,SAAWV,GACtB0G,EAhB+C,CACvD7F,KAtC6B,6BAuC7BG,KAciCjB,cAwBtBiF,EAAa,SAAAK,GAAA,IACxBH,EADwBG,EACxBH,UACAC,EAFwBE,EAExBF,OAFwB,OAGJ,SAAAuB,GACF,aAAdxB,GACFwB,EAb+B,CACjC7F,KArE0B,4BAoFR,SAAdqE,GACFwB,EAb2B,CAC7B7F,KAxEsB,wBAuFtB6F,EAASR,EAAcf,MAYZ1D,EAAa,iBAAO,CAC/BZ,KAlGwB,0BCGpBsG,6MACJC,kBAAoB,WAAM,IAAA9F,EAIpBC,EAAKC,OAET0E,EANwB5E,EAEtB4E,eAFsB5E,EAGtB7B,SAAYsC,6FAMGsF,GAAyB,IAAAC,EAItCpF,KAAKV,MAFKO,EAF4BuF,EAExC7H,SAAYsC,SACZmE,EAHwCoB,EAGxCpB,cAGEmB,EAAU5H,SAASsC,WAAaA,GAClCmE,EAAcnE,oCAIT,IAAAwF,EAYHrF,KAAKV,MAVPzB,EAFKwH,EAELxH,SACAE,EAHKsH,EAGLtH,aACAiG,EAJKqB,EAILrB,cACAhG,EALKqH,EAKLrH,UACAT,EANK8H,EAML9H,SACAkC,EAPK4F,EAOL5F,QACAqD,EARKuC,EAQLvC,WACAM,EATKiC,EASLjC,oBACAtF,EAVKuH,EAULvH,QACAyB,EAXK8F,EAWL9F,WAGF,OACEU,EAAAC,EAAAC,cAACmF,EAAD,CACEtB,cAAeA,EACfzG,SAAUA,EACVM,SAAUA,EACVE,aAAcA,EACdC,UAAWA,EACXyB,QAASA,EACTqD,WAAYA,EACZM,oBAAqBA,EACrBtF,QAASA,EACTyB,WAAYA,WA9CgBe,IAAMuB,WA6D7B0D,EAA+B9E,YAC1C+E,YAVsB,SAAClH,GACvB,MAAO,CACLT,SAAUS,EAAMX,SAASE,SACzBG,UAAWM,EAAMX,SAASK,UAC1BD,aAAcO,EAAMX,SAASI,aAC7BD,QAASQ,EAAMX,SAASG,UAOxB,CAAEkG,gBAAelB,aAAYM,oBDyBE,SAACH,GAAD,OAAoB,SAAAuB,GACrDA,EALkC,CAClC7F,KA1F2B,6BA+F3B6F,EAASR,EAAcf,MC3B6B1D,cAFpDiG,CAGEP,ICzESQ,EAAb,SAAA3B,GAAA,SAAA2B,IAAA,OAAA7G,OAAAyD,EAAA,EAAAzD,CAAAoB,KAAAyF,GAAA7G,OAAA8D,EAAA,EAAA9D,CAAAoB,KAAApB,OAAA+D,EAAA,EAAA/D,CAAA6G,GAAA5C,MAAA7C,KAAAzB,YAAA,OAAAK,OAAA0E,EAAA,EAAA1E,CAAA6G,EAAA3B,GAAAlF,OAAA2E,EAAA,EAAA3E,CAAA6G,EAAA,EAAAvE,IAAA,SAAAsC,MAAA,WACW,IACCrF,EAAY6B,KAAKV,MAAjBnB,QAER,OACE8B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAC2B,EAAD,CAAa3D,QAASA,IACtB8B,EAAAC,EAAAC,cAAA,OACEC,UAAU,OACVsF,wBAAyB,CACvBC,OAAQxH,QAA4BM,IAAjBN,EAAQyH,KAAqBzH,EAAQyH,KAAO,YAX7EH,EAAA,CAA2BnF,IAAMuB,WCDpBgE,EAAb,SAAA1D,GAAA,SAAA0D,IAAA,OAAAjH,OAAAyD,EAAA,EAAAzD,CAAAoB,KAAA6F,GAAAjH,OAAA8D,EAAA,EAAA9D,CAAAoB,KAAApB,OAAA+D,EAAA,EAAA/D,CAAAiH,GAAAhD,MAAA7C,KAAAzB,YAAA,OAAAK,OAAA0E,EAAA,EAAA1E,CAAAiH,EAAA1D,GAAAvD,OAAA2E,EAAA,EAAA3E,CAAAiH,EAAA,EAAA3E,IAAA,SAAAsC,MAAA,WACW,IACCsC,EAAe9F,KAAKV,MAApBwG,WACR,OACE7F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBC,QAASyF,GACtC7F,EAAAC,EAAAC,cAAA,iBALR0F,EAAA,CAA2BvF,IAAMC,eCCpBwF,EAAb,SAAAjC,GAAA,SAAAiC,IAAA,IAAA3D,EAAA/C,EAAAT,OAAAyD,EAAA,EAAAzD,CAAAoB,KAAA+F,GAAA,QAAAzD,EAAA/D,UAAAC,OAAA+D,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAAlE,UAAAkE,GAAA,OAAApD,EAAAT,OAAA8D,EAAA,EAAA9D,CAAAoB,MAAAoC,EAAAxD,OAAA+D,EAAA,EAAA/D,CAAAmH,IAAAnD,KAAAC,MAAAT,EAAA,CAAApC,MAAAN,OAAA6C,MACEuD,WAAa,WACXzG,EAAKC,MAAMwG,YAAczG,EAAKC,MAAMwG,cAFxCzG,EAAA,OAAAT,OAAA0E,EAAA,EAAA1E,CAAAmH,EAAAjC,GAAAlF,OAAA2E,EAAA,EAAA3E,CAAAmH,EAAA,EAAA7E,IAAA,SAAAsC,MAAA,WAKW,IAAApE,EAMHY,KAAKV,MAJPpB,EAFKkB,EAELlB,SACA8H,EAHK5G,EAGL4G,QACAC,EAJK7G,EAIL6G,sBAJKC,EAAA9G,EAKL+G,qBALK,IAAAD,KAQP,OAAKF,EAAQI,MAAQD,EAEjBlG,EAAAC,EAAAC,cAAA,OACEC,UAAU,UACVsF,wBAAyB,CACvBC,OAAQK,EAAQJ,KAAOI,EAAQJ,KAAO,MAMzCI,EAAQI,KAKXnG,EAAAC,EAAAC,cAAA,WACG8F,EAAsB/H,EAAU8H,EAAQI,MAAM3C,IAC7C,SAACuC,GACC,OACE/F,EAAAC,EAAAC,cAAA,OAAKe,IAAK8E,EAAQjF,IAChBd,EAAAC,EAAAC,cAAA,OACEC,UAAU,UACVsF,wBAAyB,CACvBC,OAAQK,EAAQJ,KAAOI,EAAQJ,KAAO,MAGzCI,EAAQI,MACPnG,EAAAC,EAAAC,cAACkG,EAAD,CACEL,QAASA,EACT9H,SAAUA,EACV+H,sBAAuBA,QAnB9B,SAzBbF,EAAA,CAA6BzF,IAAMuB,WCDtByE,EAAb,SAAAxC,GAAA,SAAAwC,IAAA,IAAAlE,EAAA/C,EAAAT,OAAAyD,EAAA,EAAAzD,CAAAoB,KAAAsG,GAAA,QAAAhE,EAAA/D,UAAAC,OAAA+D,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAAlE,UAAAkE,GAAA,OAAApD,EAAAT,OAAA8D,EAAA,EAAA9D,CAAAoB,MAAAoC,EAAAxD,OAAA+D,EAAA,EAAA/D,CAAA0H,IAAA1D,KAAAC,MAAAT,EAAA,CAAApC,MAAAN,OAAA6C,MACEuD,WAAa,WACXzG,EAAKC,MAAMwG,YAAczG,EAAKC,MAAMwG,cAFxCzG,EAAA,OAAAT,OAAA0E,EAAA,EAAA1E,CAAA0H,EAAAxC,GAAAlF,OAAA2E,EAAA,EAAA3E,CAAA0H,EAAA,EAAApF,IAAA,SAAAsC,MAAA,WAIW,IAAApE,EAIHY,KAAKV,MAJFiH,EAAAnH,EAEL4G,QAAWvE,EAFN8E,EAEM9E,GAAIV,EAFVwF,EAEUxF,GAAIyF,EAFdD,EAEcC,OACnBC,EAHKrH,EAGLqH,OAEF,OACExG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAS,OAAAV,OAASqB,EAAT,cAAArB,OAAwB8G,IAAW/E,GAClDxB,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAASC,QAASL,KAAK8F,YACpCW,EAAS,MAAQ,YAd5BH,EAAA,CAAmChG,IAAMuB,WCG5B6E,EAAb,SAAA5C,GAAA,SAAA4C,IAAA,IAAAtE,EAAA/C,EAAAT,OAAAyD,EAAA,EAAAzD,CAAAoB,KAAA0G,GAAA,QAAApE,EAAA/D,UAAAC,OAAA+D,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAAlE,UAAAkE,GAAA,OAAApD,EAAAT,OAAA8D,EAAA,EAAA9D,CAAAoB,MAAAoC,EAAAxD,OAAA+D,EAAA,EAAA/D,CAAA8H,IAAA9D,KAAAC,MAAAT,EAAA,CAAApC,MAAAN,OAAA6C,MACEjE,MAAQ,CACNmI,QAAQ,GAFZpH,EAKEyG,WAAa,kBAAMzG,EAAKsH,SAAS,CAAEF,QAASpH,EAAKf,MAAMmI,UALzDpH,EAAA,OAAAT,OAAA0E,EAAA,EAAA1E,CAAA8H,EAAA5C,GAAAlF,OAAA2E,EAAA,EAAA3E,CAAA8H,EAAA,EAAAxF,IAAA,SAAAsC,MAAA,WAOW,IACCiD,EAAWzG,KAAK1B,MAAhBmI,OADDrH,EAQHY,KAAKV,MALIyB,EAHN3B,EAGL4G,QAAWjF,GACXiF,EAJK5G,EAIL4G,QACA9H,EALKkB,EAKLlB,SACA+H,EANK7G,EAML6G,sBANKC,EAAA9G,EAOL+G,qBAPK,IAAAD,KAUP,OACEjG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAAqBc,IAAKhD,EAAS6C,GAAIA,KAClDoF,GAAiBlG,EAAAC,EAAAC,cAACyG,EAAD,CAAOd,WAAY9F,KAAK8F,aAC3C7F,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC0G,EAAD,CACEJ,OAAQA,EACRT,QAASA,EACTF,WAAY9F,KAAK8F,aAElBW,GACCxG,EAAAC,EAAAC,cAAC2G,EAAD,CACE5I,SAAUA,EACV8H,QAASA,EACTG,cAAeA,EACfL,WAAY9F,KAAK8F,WACjBW,OAAQA,EACRR,sBAAuBA,UAjCrCS,EAAA,CAAsCpG,IAAMuB,WCD/BkF,EAAb,SAAAjD,GAAA,SAAAiD,IAAA,OAAAnI,OAAAyD,EAAA,EAAAzD,CAAAoB,KAAA+G,GAAAnI,OAAA8D,EAAA,EAAA9D,CAAAoB,KAAApB,OAAA+D,EAAA,EAAA/D,CAAAmI,GAAAlE,MAAA7C,KAAAzB,YAAA,OAAAK,OAAA0E,EAAA,EAAA1E,CAAAmI,EAAAjD,GAAAlF,OAAA2E,EAAA,EAAA3E,CAAAmI,EAAA,EAAA7F,IAAA,SAAAsC,MAAA,WACW,IAAApE,EAMHY,KAAKV,MAJPnB,EAFKiB,EAELjB,QACWiI,EAHNhH,EAGLjB,QAAWiI,KACXlI,EAJKkB,EAILlB,SACA+H,EALK7G,EAKL6G,sBAGF,OACEhG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAC6G,EAAD,CAAO7I,QAASA,IACfA,EAAQ4C,IACPqF,GACAH,GACAA,EAAsB/H,EAAUkI,GAAM3C,IAAI,SAAAuC,GACxC,OACE/F,EAAAC,EAAAC,cAACkG,EAAD,CACEnI,SAAUA,EACV8H,QAASA,EACTC,sBAAuBA,EACvB/E,IAAK8E,EAAQjF,GACboF,eAAe,WAtB/BY,EAAA,CAAgCzG,IAAMuB,WCAzBoF,EAAb,SAAAnD,GAAA,SAAAmD,IAAA,OAAArI,OAAAyD,EAAA,EAAAzD,CAAAoB,KAAAiH,GAAArI,OAAA8D,EAAA,EAAA9D,CAAAoB,KAAApB,OAAA+D,EAAA,EAAA/D,CAAAqI,GAAApE,MAAA7C,KAAAzB,YAAA,OAAAK,OAAA0E,EAAA,EAAA1E,CAAAqI,EAAAnD,GAAAlF,OAAA2E,EAAA,EAAA3E,CAAAqI,EAAA,EAAA/F,IAAA,SAAAsC,MAAA,WACW,IAAApE,EAOHY,KAAKV,MALPC,EAFKH,EAELG,WACAvB,EAHKoB,EAGLpB,UACAE,EAJKkB,EAILlB,SACAC,EALKiB,EAKLjB,QACA8H,EANK7G,EAML6G,sBAEF,OACEhG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACK,EAAD,CAAQjB,WAAYA,IAClBvB,EAOAiC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OACEwD,IAAI,GACJC,IAAI,gEATR3D,EAAAC,EAAAC,cAAC+G,EAAD,CACEhJ,SAAUA,EACVC,QAASA,EACT8H,sBAAuBA,SAhBnCgB,EAAA,CAA6C3G,IAAMuB,WCDtCsF,EAAb,SAAArD,GAAA,SAAAqD,IAAA,IAAA/E,EAAA/C,EAAAT,OAAAyD,EAAA,EAAAzD,CAAAoB,KAAAmH,GAAA,QAAA7E,EAAA/D,UAAAC,OAAA+D,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAAlE,UAAAkE,GAAA,OAAApD,EAAAT,OAAA8D,EAAA,EAAA9D,CAAAoB,MAAAoC,EAAAxD,OAAA+D,EAAA,EAAA/D,CAAAuI,IAAAvE,KAAAC,MAAAT,EAAA,CAAApC,MAAAN,OAAA6C,MACE0D,sBAAwB,SAAC/H,EAA4BkI,GAA7B,OACtBxH,OAAOwI,OAAOlJ,GAAUmJ,OAAO,SAACrB,GAC9B,OAAOI,EAAKtG,SAASkG,GAAWA,EAAQjF,OAH9C1B,EAAA,OAAAT,OAAA0E,EAAA,EAAA1E,CAAAuI,EAAArD,GAAAlF,OAAA2E,EAAA,EAAA3E,CAAAuI,EAAA,EAAAjG,IAAA,SAAAsC,MAAA,WAMW,IAAApE,EAUHY,KAAKV,MARP/B,EAFK6B,EAEL7B,SACAkC,EAHKL,EAGLK,QACAzB,EAJKoB,EAILpB,UACA8E,EALK1D,EAKL0D,WACAwE,EANKlI,EAMLkI,2BACA/H,EAPKH,EAOLG,WACArB,EARKkB,EAQLlB,SACAC,EATKiB,EASLjB,QAGF,OACE8B,EAAAC,EAAAC,cAACoH,EAAD,CACEhK,SAAUA,EACVkC,QAASA,EACTzB,UAAWA,EACX8E,WAAYA,EACZwE,2BAA4BA,EAC5B/H,WAAYA,EACZrB,SAAUA,EACVC,QAASA,EACT8H,sBAAuBjG,KAAKiG,4BA5BpCkB,EAAA,CAA2C7G,IAAMuB,WCK3C2F,8LACgB,IAAApI,EAIdY,KAAKV,OAGTgI,EAPkBlI,EAEhBkI,4BAFgBlI,EAGhB7B,SAAYsC,SAGM4H,MAAM,KAAK,mFAMxB,IAAArC,EAUHpF,KAAKV,MARP/B,EAFK6H,EAEL7H,SACAkC,EAHK2F,EAGL3F,QACAzB,EAJKoH,EAILpH,UACA8E,EALKsC,EAKLtC,WACAwE,EANKlC,EAMLkC,2BACA/H,EAPK6F,EAOL7F,WACApB,EARKiH,EAQLjH,QACAD,EATKkH,EASLlH,SAGF,OACE+B,EAAAC,EAAAC,cAACuH,EAAD,CACEnK,SAAUA,EACVkC,QAASA,EACTzB,UAAWA,EACX8E,WAAYA,EACZwE,2BAA4BA,EAC5B/H,WAAYA,EACZrB,SAAUA,EACVC,QAASA,WAlCkBmC,IAAMuB,WA8C5B8F,EAA8BlH,YACzC+E,YAPsB,SAAClH,GAAD,MAAuB,CAC7CN,UAAWM,EAAML,QAAQD,UACzBG,QAASG,EAAML,QAAQE,QACvBD,SAAUI,EAAML,QAAQC,WAMtB,CAAE4E,aAAYwE,2BCRwB,SAACvG,GAAD,OAAgB,SAAAyD,GAExD,OADAA,EA5CsC,CACtC7F,KAN+B,iCAkDxB8F,MAAK,8CAAA/E,OAA+CqB,EAA/C,UACT2D,KAAK,SAAAC,GAAG,OAAIA,EAAI7F,SAChB4F,KAAK,SAACE,GACDA,GAAUA,EAAOwB,MACnB5B,EA/BmB,SAAdoD,EACXxB,EACAyB,EACAjG,GAHyB,OAItB,SAAA4C,GACE4B,EAAK5H,QAIV4H,EAAK0B,QAAQ,SAAC/G,GACZ,OAAO0D,MAAK,8CAAA/E,OAA+CqB,EAA/C,UAA0D2D,KACpE,SAAAC,GAAG,OACDA,EAAI7F,OAAO4F,KAAK,SAAAE,GACdiD,EAAe9G,GAAM6D,EACjBA,GAAUA,EAAOwB,MACnB5B,EAASoD,EAAYhD,EAAOwB,KAAMyB,EAAgBjG,IAEhDhD,OAAOmJ,KAAKF,GAAgBrJ,SAAWoD,GACzC4C,EA3B4B,CACtC7F,KAb6B,4BAc7BG,KAyBmC+I,WAapBD,CAAYhD,EAAOwB,KAAM,GAAIxB,EAAOhD,cAE/C4C,EA/CiC,CACrC7F,KAT4B,2BAU5BG,KA6C4B8F,QDAgBrF,cAF5CiG,CAGEgC,IEpDEQ,mLACK,IAEOnI,EACVG,KAAKV,MADP/B,SAAYsC,SAGd,MAAiB,MAAbA,EACKI,EAAAC,EAAAC,cAACgE,EAAA,EAAD,CAAU8D,GAAG,eAGlBpI,EAAS4H,MAAM,KAAK,GACfxH,EAAAC,EAAAC,cAACwH,EAAD,MAGF1H,EAAAC,EAAAC,cAACoF,EAAD,aAdkBjF,IAAMuB,WAkBtBqG,EAAwBzH,YAAWuH,GCZ1CG,EAAmBC,yBAEnBC,EAAQC,sBACZlK,EACAmK,8BAAoBC,0BAAgBC,IAAiBN,KAavDO,IAASC,OAAO1I,EAAAC,EAAAC,cAVM,WACpB,OACEF,EAAAC,EAAAC,cAACyI,EAAA,EAAD,CAAUP,MAAOA,GACfpI,EAAAC,EAAAC,cAAC0I,EAAA,EAAD,CAAQC,SAAS,gBACf7I,EAAAC,EAAAC,cAAC+H,EAAD,SAMQ,MAASa,SAASC,eAAe,SzB2G3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMzE,KAAK,SAAA0E,GACjCA,EAAaC","file":"static/js/main.af2ea984.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { StateType } from \"types/types\";\n\nexport const initialState: StateType = {\n  homePage: {\n    list: [],\n    articles: [],\n    counter: 10,\n    currentIndex: 0,\n    isLoading: false,\n  },\n  discuss: {\n    comments: {},\n    article: {},\n    isLoading: false,\n  },\n};\n","// import { initialState } from \"config/store\";\nimport { homePageReducer } from \"modules/HomePage/reducer\";\nimport { discussReducer } from \"modules/Discuss/reducer\";\nimport { combineReducers } from \"redux\";\nimport { initialState } from \"config/store\";\n\nexport const homePage = (state: any = initialState.homePage, action: any) => {\n  return homePageReducer(state, action);\n};\n\nexport const discuss = (state: any = initialState.discuss, action: any) => {\n  return discussReducer(state, action);\n};\n\nexport const rootReducer = combineReducers({\n  homePage,\n  discuss,\n});\n","import { initialState } from \"config/store\";\nimport { Action } from \"types/actions\";\n\nexport const homePageReducer = (\n  state: any = initialState.homePage,\n  action: Action\n) => {\n  switch (action.type) {\n    case \"HOMEPAGE::GET_LIST\":\n      return { ...state, isLoading: true };\n    case \"HOMEPAGE::RECEIVE_LIST\":\n      return { ...state, list: action.json, isLoading: false };\n    case \"HOMEPAGE::GET_ARTICLES\":\n      return { ...state, isLoading: true };\n    case \"HOMEPAGE::RECEIVE_ARTICLES\":\n      return { ...state, articles: action.json, isLoading: false };\n    case \"HOMEPAGE::PREVIOUS_PAGE\":\n      return { ...state, currentIndex: state.currentIndex - state.counter };\n    case \"HOMEPAGE::NEXT_PAGE\":\n      return { ...state, currentIndex: state.currentIndex + state.counter };\n    case \"HOMEPAGE::TOGGLE_COUNTER\":\n      return { ...state, counter: state.counter === 10 ? 20 : 10 };\n    case \"HOMEPAGE::RESET_INDEX\":\n      return { ...state, currentIndex: 0 };\n    default:\n      return state;\n  }\n};\n","// import { StateType } from \"types/types\";\nimport { initialState } from \"config/store\";\n\nexport const discussReducer = (\n  state: any = initialState.discuss,\n  action: any\n) => {\n  switch (action.type) {\n    case \"DISCUSS::FETCH_ARTICLE_START\":\n      return { ...state, isLoading: true };\n    case \"DISCUSS::RECEIVE_ARTICLE\":\n      return { ...state, article: { ...action.json } };\n    case \"DISCUSS::REQUEST_COMMENTS\":\n      return { ...state, isLoading: true };\n    case \"DISCUSS::RECEIVE_COMMENTS\":\n      return { ...state, isLoading: false, comments: { ...action.json } };\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport { HeaderType } from \"types/types\";\nimport { withRouter } from \"react-router\";\n\nclass Header extends React.PureComponent<HeaderType> {\n  changeSort = (stories: string) => {\n    const {\n      resetIndex,\n      history: { push },\n    } = this.props;\n    resetIndex && resetIndex();\n    push(`/${stories}`);\n  };\n\n  addClassIfActive = path =>\n    this.props.location.pathname.includes(path) ? \" active\" : \"\";\n\n  render() {\n    return (\n      <div className=\"head\">\n        <span className=\"title\">Almost Hacker News</span>\n        <span className=\"space\">|</span>\n        <span\n          className={`sort${this.addClassIfActive(\"topstories\")}`}\n          onClick={() => this.changeSort(\"topstories\")}\n        >\n          Top Stories\n        </span>\n        <span className=\"space\">|</span>\n        <span\n          className={`sort${this.addClassIfActive(\"newstories\")}`}\n          onClick={() => this.changeSort(\"newstories\")}\n        >\n          New Stories\n        </span>\n        <span className=\"space\">|</span>\n        <span\n          className={`sort${this.addClassIfActive(\"beststories\")}`}\n          onClick={() => this.changeSort(\"beststories\")}\n        >\n          Best Stories\n        </span>\n      </div>\n    );\n  }\n}\n\nexport const HeaderWrapped = withRouter(Header);\n","import React from \"react\";\nimport { ArticleItemType } from \"types/types\";\nimport { withRouter } from \"react-router\";\n\nclass ArticleItem extends React.Component<ArticleItemType> {\n  getUrl = (url: string) => {\n    const regex = /(http(s)?:\\/\\/)|(\\/.*){1}/g;\n    return url.replace(regex, \"\");\n  };\n\n  toDiscussPage = id => {\n    const {\n      history,\n      location: { pathname },\n    } = this.props;\n\n    history.push(`${pathname}/${id}`);\n  };\n\n  keyDownToDiscussPage = (event: React.KeyboardEvent, id: number) => {\n    if (event.key !== \"Enter\") {\n      return;\n    }\n    this.toDiscussPage(id);\n  };\n\n  render() {\n    const { article } = this.props;\n\n    if (!article) {\n      console.log({ article });\n    }\n\n    return (\n      <>\n        <div className=\"header\">\n          <span className=\"title\">\n            {article && article.url ? (\n              <a href={article.url}>{article.title}</a>\n            ) : (\n              <span onClick={() => this.toDiscussPage(article.id)}>\n                {article.title}\n              </span>\n            )}\n          </span>\n          <span className=\"url\">\n            {article && article.url && this.getUrl(article.url)}\n          </span>\n        </div>\n        <div className=\"more-info\">\n          <span>{article.score} points</span>\n          <span>by</span>\n          <span>{article.by}</span>\n          <span\n            className=\"cursor\"\n            tabIndex={0}\n            onClick={() => this.toDiscussPage(article.id)}\n            onKeyDown={event => this.keyDownToDiscussPage(event, article.id)}\n          >\n            {article.descendants} comments\n          </span>\n        </div>\n      </>\n    );\n  }\n}\n\nexport const ArticleItemWrapped = withRouter(ArticleItem);\n","import React from \"react\";\nimport { ListItemType } from \"types/types\";\nimport { withRouter } from \"react-router\";\nimport { ArticleItemWrapped as ArticleItem } from \"components/ArticleItem\";\n\nclass ListItem extends React.Component<ListItemType> {\n  render() {\n    const { article, index } = this.props;\n\n    return (\n      <div className=\"article\">\n        <div className=\"left\">{index + 1}</div>\n        <div className=\"right\">\n          <ArticleItem article={article} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const ListItemWrapped = withRouter(ListItem);\n","import React from \"react\";\nimport { ContentType, ArticleType } from \"types/types\";\nimport { ListItemWrapped as ListItem } from \"modules/HomePage/components/ListItem\";\n\nexport class Content extends React.PureComponent<ContentType> {\n  switchPage = ({ direction, sortBy }) => {\n    this.props.switchPage({ direction, sortBy });\n  };\n\n  onKeyDownSwitchPage = (event: React.KeyboardEvent, { direction, sortBy }) => {\n    if (event.key !== \"Enter\") {\n      return;\n    }\n    this.switchPage({ direction, sortBy });\n  };\n\n  toggleArticlesCount = pathname => {\n    this.props.toggleArticlesCount(pathname);\n  };\n\n  onKeyDownToggleArticlesCount = (event: React.KeyboardEvent, pathname) => {\n    if (event.key !== \"Enter\") {\n      return;\n    }\n    this.toggleArticlesCount(pathname);\n  };\n\n  render() {\n    const {\n      articles,\n      currentIndex,\n      counter,\n      location: { pathname },\n    } = this.props;\n\n    return (\n      <div className=\"content\">\n        {articles.map((article: ArticleType, index) => (\n          <ListItem\n            key={index + currentIndex}\n            article={article}\n            index={index + currentIndex}\n          />\n        ))}\n        <div className=\"more\">\n          {currentIndex !== 0 && (\n            <>\n              <span\n                onClick={() =>\n                  this.switchPage({\n                    direction: \"previous\",\n                    sortBy: pathname,\n                  })\n                }\n                onKeyDown={event =>\n                  this.onKeyDownSwitchPage(event, {\n                    direction: \"next\",\n                    sortBy: pathname,\n                  })\n                }\n              >\n                {currentIndex > 0 ? \"Before\" : \"\"}\n              </span>\n              <span className=\"space\">|</span>\n            </>\n          )}\n          <span\n            onClick={() =>\n              this.switchPage({ direction: \"next\", sortBy: pathname })\n            }\n            onKeyDown={event =>\n              this.onKeyDownSwitchPage(event, {\n                direction: \"next\",\n                sortBy: pathname,\n              })\n            }\n            tabIndex={0}\n          >\n            Next\n          </span>\n          <span className=\"space\">|</span>\n          {counter === 10 ? (\n            <span\n              onClick={() => this.toggleArticlesCount(pathname)}\n              tabIndex={0}\n              onKeyDown={event =>\n                this.onKeyDownToggleArticlesCount(event, pathname)\n              }\n            >\n              Show 20 articles\n            </span>\n          ) : (\n            <span\n              onClick={() => this.toggleArticlesCount(pathname)}\n              tabIndex={0}\n              onKeyDown={event =>\n                this.onKeyDownToggleArticlesCount(event, pathname)\n              }\n            >\n              Show 10 articles\n            </span>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport class IsLoading extends React.PureComponent<{}> {\n  render() {\n    return (\n      <div className=\"loading\">\n        <img\n          alt=\"\"\n          src=\"https://cdn.friendbuy.com/widget/images/shared/spinner.svg\"\n        />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { HeaderWrapped as Header } from \"components/Header\";\nimport { Content } from \"modules/HomePage/modules/Content\";\nimport { Route } from \"react-router-dom\";\nimport { HomePageType } from \"types/types\";\nimport { IsLoading } from \"components/IsLoading\";\n\nexport class HomePageDisplayContainer extends React.Component<HomePageType> {\n  content = () => {\n    const {\n      articles,\n      isLoading,\n      currentIndex,\n      fetchArticles,\n      location,\n      switchPage,\n      toggleArticlesCount,\n      counter,\n    } = this.props;\n\n    if (isLoading) {\n      return <IsLoading />;\n    }\n\n    return (\n      <Content\n        articles={articles}\n        isLoading={isLoading}\n        currentIndex={currentIndex}\n        switchPage={switchPage}\n        fetchArticles={fetchArticles}\n        location={location}\n        toggleArticlesCount={toggleArticlesCount}\n        counter={counter}\n      />\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Header resetIndex={this.props.resetIndex} />\n        <Route exact path=\"/**/\" component={this.content} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { HomePageDisplayContainer } from \"./DisplayContainer\";\nimport { HomePageType } from \"types/types\";\n\nexport class HomePageLogicContainer extends React.Component<HomePageType> {\n  render() {\n    const {\n      articles,\n      currentIndex,\n      fetchArticles,\n      isLoading,\n      location,\n      switchPage,\n      history,\n      toggleArticlesCount,\n      counter,\n      resetIndex,\n    } = this.props;\n\n    return (\n      <HomePageDisplayContainer\n        fetchArticles={fetchArticles}\n        location={location}\n        articles={articles}\n        currentIndex={currentIndex}\n        isLoading={isLoading}\n        history={history}\n        switchPage={switchPage}\n        toggleArticlesCount={toggleArticlesCount}\n        counter={counter}\n        resetIndex={resetIndex}\n      />\n    );\n  }\n}\n","import { ArticleType } from \"types/types\";\n\nexport const GetList = \"HOMEPAGE::GET_LIST\";\nexport const ReceiveList = \"HOMEPAGE::RECEIVE_LIST\";\nexport const GetArticles = \"HOMEPAGE::GET_ARTICLES\";\nexport const ReceiveArticles = \"HOMEPAGE::RECEIVE_ARTICLES\";\nexport const PreviousPage = \"HOMEPAGE::PREVIOUS_PAGE\";\nexport const NextPage = \"HOMEPAGE::NEXT_PAGE\";\nexport const ToggleCounter = \"HOMEPAGE::TOGGLE_COUNTER\";\nexport const ResetIndex = \"HOMEPAGE::RESET_INDEX\";\n\nexport type ArticlesParam = {\n  type: string;\n  sortBy?: string;\n  json?: [];\n  data?: any[];\n  currentIndex?: number;\n  counter?: number;\n};\n\nexport type SwitchPageType = {\n  direction: \"previous\" | \"next\";\n  sortBy: string;\n};\n\nexport const requestList = (): ArticlesParam => ({\n  type: GetList,\n});\n\nexport const receiveList = ({ json }): ArticlesParam => ({\n  type: ReceiveList,\n  json,\n});\n\nexport const failureList = (): ArticlesParam => ({\n  type: \"FAILURE_LIST\",\n});\n\nexport const requestArticles = (): ArticlesParam => ({\n  type: GetArticles,\n});\n\nexport const receiveArticles = (json): ArticlesParam => ({\n  type: ReceiveArticles,\n  json,\n});\n\nexport const fetchArticlesData = () => (dispatch, getState) => {\n  const { list, currentIndex, counter } = getState().homePage;\n\n  const articles: ArticleType[] = [];\n  dispatch(requestArticles());\n  list.slice(currentIndex, currentIndex + counter).map(number =>\n    fetch(`https://hacker-news.firebaseio.com/v0/item/${number}.json`)\n      .then(res => res.json())\n      .then(result => {\n        articles.push(result);\n        if (articles.length === counter) {\n          dispatch(receiveArticles(articles));\n        }\n      })\n  );\n};\n\nexport const fetchArticles = (sortBy: string) => dispatch => {\n  dispatch(requestList());\n  return fetch(`https://hacker-news.firebaseio.com/v0/${sortBy}.json`)\n    .then(res => res.json())\n    .then(result => {\n      dispatch(receiveList({ json: result }));\n      dispatch(fetchArticlesData());\n    });\n};\n\nexport const previousPage = () => ({\n  type: PreviousPage,\n});\n\nexport const nextPage = () => ({\n  type: NextPage,\n});\n\nexport const switchPage = ({\n  direction,\n  sortBy,\n}: SwitchPageType) => dispatch => {\n  if (direction === \"previous\") {\n    dispatch(previousPage());\n  }\n\n  if (direction === \"next\") {\n    dispatch(nextPage());\n  }\n\n  dispatch(fetchArticles(sortBy));\n};\n\nexport const toggleCounter = () => ({\n  type: ToggleCounter,\n});\n\nexport const toggleArticlesCount = (sortBy: string) => dispatch => {\n  dispatch(toggleCounter());\n  dispatch(fetchArticles(sortBy));\n};\n\nexport const resetIndex = () => ({\n  type: ResetIndex,\n});\n\nexport type HomePageActions = ArticlesParam;\n","import React from \"react\";\nimport { HomePageLogicContainer } from \"./LogicContainer\";\nimport { Selectors, HomePageType } from \"types/types\";\nimport { connect } from \"react-redux\";\nimport {\n  fetchArticles,\n  switchPage,\n  toggleArticlesCount,\n  resetIndex,\n} from \"./actions\";\nimport { withRouter } from \"react-router\";\n\nclass HomePageDataContainer extends React.Component<HomePageType> {\n  componentDidMount = () => {\n    const {\n      fetchArticles,\n      location: { pathname },\n    } = this.props;\n\n    fetchArticles(pathname);\n  };\n\n  componentDidUpdate(prevProps: HomePageType) {\n    const {\n      location: { pathname },\n      fetchArticles,\n    } = this.props;\n\n    if (prevProps.location.pathname !== pathname) {\n      fetchArticles(pathname);\n    }\n  }\n\n  render() {\n    const {\n      articles,\n      currentIndex,\n      fetchArticles,\n      isLoading,\n      location,\n      history,\n      switchPage,\n      toggleArticlesCount,\n      counter,\n      resetIndex,\n    } = this.props;\n\n    return (\n      <HomePageLogicContainer\n        fetchArticles={fetchArticles}\n        location={location}\n        articles={articles}\n        currentIndex={currentIndex}\n        isLoading={isLoading}\n        history={history}\n        switchPage={switchPage}\n        toggleArticlesCount={toggleArticlesCount}\n        counter={counter}\n        resetIndex={resetIndex}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state: Selectors) => {\n  return {\n    articles: state.homePage.articles,\n    isLoading: state.homePage.isLoading,\n    currentIndex: state.homePage.currentIndex,\n    counter: state.homePage.counter,\n  };\n};\n\nexport const HomePageDataContainerWrapped = withRouter(\n  connect(\n    mapStateToProps,\n    { fetchArticles, switchPage, toggleArticlesCount, resetIndex }\n  )(HomePageDataContainer)\n);\n","import React from \"react\";\nimport { TopicType } from \"types/types\";\nimport { ArticleItemWrapped as ArticleItem } from \"components/ArticleItem\";\n\nexport class Topic extends React.Component<TopicType> {\n  render() {\n    const { article } = this.props;\n\n    return (\n      <div className=\"article\">\n        <div className=\"right\">\n          <ArticleItem article={article} />\n          <div\n            className=\"text\"\n            dangerouslySetInnerHTML={{\n              __html: article && article.text !== undefined ? article.text : \"\",\n            }}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { SpaceType } from \"types/types\";\n\nexport class Space extends React.PureComponent<SpaceType> {\n  render() {\n    const { toggleView } = this.props;\n    return (\n      <div className=\"comment-space\" onClick={toggleView}>\n        <div />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { CommentsType, CommentType } from \"types/types\";\nimport { CommentContainer } from \"./CommentContainer\";\n\nexport class Comment extends React.Component<CommentsType> {\n  toggleView = () => {\n    this.props.toggleView && this.props.toggleView();\n  };\n\n  render() {\n    const {\n      comments,\n      comment,\n      childrenCommentsArray,\n      isFirstRender = false,\n    } = this.props;\n\n    if (!comment.kids && isFirstRender) {\n      return (\n        <div\n          className=\"comment\"\n          dangerouslySetInnerHTML={{\n            __html: comment.text ? comment.text : \"\",\n          }}\n        />\n      );\n    }\n\n    if (!comment.kids) {\n      return null;\n    }\n\n    return (\n      <div>\n        {childrenCommentsArray(comments, comment.kids).map(\n          (comment: CommentType) => {\n            return (\n              <div key={comment.id}>\n                <div\n                  className=\"comment\"\n                  dangerouslySetInnerHTML={{\n                    __html: comment.text ? comment.text : \"\",\n                  }}\n                />\n                {comment.kids && (\n                  <CommentContainer\n                    comment={comment}\n                    comments={comments}\n                    childrenCommentsArray={childrenCommentsArray}\n                  />\n                )}\n              </div>\n            );\n          }\n        )}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { CommentHeaderType } from \"types/types\";\n\nexport class CommentHeader extends React.Component<CommentHeaderType> {\n  toggleView = () => {\n    this.props.toggleView && this.props.toggleView();\n  };\n  render() {\n    const {\n      comment: { by, id, parent },\n      isOpen,\n    } = this.props;\n    return (\n      <div className=\"more-info\">\n        <span className={`id: ${id}, parent: ${parent}`}>{by}</span>\n        <span>some time ago</span>\n        <span className=\"cursor\" onClick={this.toggleView}>\n          {isOpen ? \"[-]\" : \"[+]\"}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { CommentComponentType } from \"types/types\";\nimport { Space } from \"./Space\";\nimport { Comment } from \"./Comment\";\nimport { CommentHeader } from \"./CommentHeader\";\n\nexport class CommentContainer extends React.Component<CommentComponentType> {\n  state = {\n    isOpen: true,\n  };\n\n  toggleView = () => this.setState({ isOpen: !this.state.isOpen });\n\n  render() {\n    const { isOpen } = this.state;\n    const {\n      comment: { id },\n      comment,\n      comments,\n      childrenCommentsArray,\n      isFirstRender = false,\n    } = this.props;\n\n    return (\n      <div className=\"comments-container\" key={comments[id].id}>\n        {!isFirstRender && <Space toggleView={this.toggleView} />}\n        <div>\n          <CommentHeader\n            isOpen={isOpen}\n            comment={comment}\n            toggleView={this.toggleView}\n          />\n          {isOpen && (\n            <Comment\n              comments={comments}\n              comment={comment}\n              isFirstRender={isFirstRender}\n              toggleView={this.toggleView}\n              isOpen={isOpen}\n              childrenCommentsArray={childrenCommentsArray}\n            />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { DiscussionType } from \"types/types\";\nimport { Topic } from \"../components/Topic\";\nimport { CommentContainer } from \"../components/CommentContainer\";\n\nexport class Discussion extends React.Component<DiscussionType> {\n  render() {\n    const {\n      article,\n      article: { kids },\n      comments,\n      childrenCommentsArray,\n    } = this.props;\n\n    return (\n      <div className=\"content\">\n        <Topic article={article} />\n        {article.id &&\n          kids &&\n          childrenCommentsArray &&\n          childrenCommentsArray(comments, kids).map(comment => {\n            return (\n              <CommentContainer\n                comments={comments}\n                comment={comment}\n                childrenCommentsArray={childrenCommentsArray}\n                key={comment.id}\n                isFirstRender={true}\n              />\n            );\n          })}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { DiscussType } from \"types/types\";\nimport { HeaderWrapped as Header } from \"components/Header\";\nimport { Discussion } from \"./modules/Discussion\";\n\nexport class DiscussDisplayContainer extends React.Component<DiscussType> {\n  render() {\n    const {\n      resetIndex,\n      isLoading,\n      comments,\n      article,\n      childrenCommentsArray,\n    } = this.props;\n    return (\n      <div>\n        <Header resetIndex={resetIndex} />\n        {!isLoading ? (\n          <Discussion\n            comments={comments}\n            article={article}\n            childrenCommentsArray={childrenCommentsArray}\n          />\n        ) : (\n          <div className=\"loading\">\n            <img\n              alt=\"\"\n              src=\"https://cdn.friendbuy.com/widget/images/shared/spinner.svg\"\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { DiscussType, CommentType } from \"types/types\";\nimport { DiscussDisplayContainer } from \"./DisplayContainer\";\n\nexport class DiscussLogicContainer extends React.Component<DiscussType> {\n  childrenCommentsArray = (comments: CommentType | {}, kids: number[]) =>\n    Object.values(comments).filter((comment: CommentType) => {\n      return kids.includes(comment && comment.id);\n    });\n\n  render() {\n    const {\n      location,\n      history,\n      isLoading,\n      switchPage,\n      fetchArticleForDiscussPage,\n      resetIndex,\n      comments,\n      article,\n    } = this.props;\n\n    return (\n      <DiscussDisplayContainer\n        location={location}\n        history={history}\n        isLoading={isLoading}\n        switchPage={switchPage}\n        fetchArticleForDiscussPage={fetchArticleForDiscussPage}\n        resetIndex={resetIndex}\n        comments={comments}\n        article={article}\n        childrenCommentsArray={this.childrenCommentsArray}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport { withRouter } from \"react-router\";\nimport { connect } from \"react-redux\";\nimport { DiscussType, StateType } from \"types/types\";\nimport { DiscussLogicContainer } from \"./LogicContainer\";\nimport { switchPage } from \"modules/HomePage/actions\";\nimport { fetchArticleForDiscussPage } from \"./actions\";\nimport { resetIndex } from \"modules/HomePage/actions\";\n\nclass DiscussDataContainer extends React.Component<DiscussType> {\n  componentDidMount() {\n    const {\n      fetchArticleForDiscussPage,\n      location: { pathname },\n    } = this.props;\n\n    const id = pathname.split(\"/\")[2];\n    fetchArticleForDiscussPage(id);\n  }\n\n  componentDidUpdate() {}\n\n  render() {\n    const {\n      location,\n      history,\n      isLoading,\n      switchPage,\n      fetchArticleForDiscussPage,\n      resetIndex,\n      article,\n      comments,\n    } = this.props;\n\n    return (\n      <DiscussLogicContainer\n        location={location}\n        history={history}\n        isLoading={isLoading}\n        switchPage={switchPage}\n        fetchArticleForDiscussPage={fetchArticleForDiscussPage}\n        resetIndex={resetIndex}\n        comments={comments}\n        article={article}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state: StateType) => ({\n  isLoading: state.discuss.isLoading,\n  article: state.discuss.article,\n  comments: state.discuss.comments,\n});\n\nexport const DiscussDataContainerWrapped = withRouter(\n  connect(\n    mapStateToProps,\n    { switchPage, fetchArticleForDiscussPage, resetIndex }\n  )(DiscussDataContainer)\n);\n","import { ArticleType } from \"types/types\";\n\nexport const FetchArticleStart = \"DISCUSS::FETCH_ARTICLE_START\";\nexport const ReceiveArticle = \"DISCUSS::RECEIVE_ARTICLE\";\nexport const ReceiveComments = \"DISCUSS::RECEIVE_COMMENTS\";\nexport const RequestComments = \"DISCUSS::REQUEST_COMMENTS\";\n\nexport const fetchArticleStart = () => ({\n  type: FetchArticleStart,\n});\n\nexport const receiveArticle = json => ({\n  type: ReceiveArticle,\n  json,\n});\n\nexport const receiveComments = json => ({\n  type: ReceiveComments,\n  json,\n});\n\nexport const requestComments = () => ({\n  type: RequestComments,\n});\n\nexport const getComments = (\n  kids: number[],\n  commentsObject: any,\n  descendants\n) => dispatch => {\n  if (!kids.length) {\n    return;\n  }\n\n  kids.forEach((id: number) => {\n    return fetch(`https://hacker-news.firebaseio.com/v0/item/${id}.json`).then(\n      res =>\n        res.json().then(result => {\n          commentsObject[id] = result;\n          if (result && result.kids) {\n            dispatch(getComments(result.kids, commentsObject, descendants));\n          }\n          if (Object.keys(commentsObject).length === descendants) {\n            dispatch(receiveComments(commentsObject));\n          }\n        })\n    );\n  });\n};\n\nexport const fetchArticleForDiscussPage = (id: number) => dispatch => {\n  dispatch(fetchArticleStart());\n  return fetch(`https://hacker-news.firebaseio.com/v0/item/${id}.json`)\n    .then(res => res.json())\n    .then((result: ArticleType) => {\n      if (result && result.kids) {\n        dispatch(getComments(result.kids, {}, result.descendants));\n      }\n      dispatch(receiveArticle(result));\n    });\n};\n","import React from \"react\";\nimport { HomePageDataContainerWrapped as HomePage } from \"modules/HomePage/DataContainer\";\nimport { DiscussDataContainerWrapped as Discuss } from \"modules/Discuss/DataContainer\";\nimport { withRouter, RouteComponentProps, Redirect } from \"react-router\";\n\nexport interface RouteContainerType extends RouteComponentProps<{}> {}\n\nclass RouteContainer extends React.Component<RouteContainerType> {\n  render() {\n    const {\n      location: { pathname },\n    } = this.props;\n\n    if (pathname === \"/\") {\n      return <Redirect to=\"topstories\" />;\n    }\n\n    if (pathname.split(\"/\")[2]) {\n      return <Discuss />;\n    }\n\n    return <HomePage />;\n  }\n}\n\nexport const RouteContainerWrapped = withRouter(RouteContainer);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { createLogger } from \"redux-logger\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport * as serviceWorker from \"serviceWorker\";\nimport \"styles/app.css\";\nimport { rootReducer } from \"rootReducer\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { RouteContainerWrapped as RouteContainer } from \"RouteContainer\";\n\nconst loggerMiddleware = createLogger();\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunkMiddleware, loggerMiddleware))\n);\n\nconst App: React.FC = () => {\n  return (\n    <Provider store={store}>\n      <Router basename=\"/hacker-news\">\n        <RouteContainer />\n      </Router>\n    </Provider>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}